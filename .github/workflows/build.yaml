name: Armbian Custom Build

on:
  workflow_dispatch:
    inputs:
      board:
        description: 'Board to build'
        required: true
        default: 'uefi-x86'
      branch:
        description: 'Kernel branch'
        required: true
        default: 'current'
        type: choice
        options:
        - legacy
        - current
        - edge

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Free disk space
        uses: descriptinc/free-disk-space@main
        with:
          android: true
          dotnet: true
          haskell: true
          large-packages: true
          docker-images: true
          swap-storage: true

      - name: Install btrfs support
        run: |
          sudo apt-get update
          sudo apt-get install -y btrfs-progs

      - name: Create fake modprobe
        run: |
          sudo tee /usr/local/bin/modprobe <<EOL
          #!/bin/sh
          exit 0
          EOL
          sudo chmod +x /usr/local/bin/modprobe

      - name: Clone Armbian build repository
        run: |
          git clone https://github.com/armbian/build.git
          cd build
          LATEST_STABLE_VERSION=$(git tag -l "v[0-9]*.[0-9]*.[0-9]" | grep -v "-" | sort -V | tail -n1)
          echo "Latest stable version tag: $LATEST_STABLE_VERSION"
          git checkout $LATEST_STABLE_VERSION
          echo "LATEST_STABLE_VERSION=$LATEST_STABLE_VERSION" >> $GITHUB_ENV

      - name: Build Armbian
        working-directory: ./build
        run: |
          ./compile.sh BOARD=${{ github.event.inputs.board }} \
            BRANCH=${{ github.event.inputs.branch }} \
            BUILD_MINIMAL=yes \
            RELEASE=bookworm \
            BOOTSIZE=2048 \
            ROOTFS_TYPE=btrfs \
            EXTRAWIFI=no \
            NETWORKING_STACK=systemd-networkd \
            DOCKER_ARMBIAN_BASE_IMAGE=ubuntu:noble \
            INSTALL_HEADERS=yes \
            KERNEL_CONFIGURE=prebuilt \
            KERNEL_GIT=shallow \
            COMPRESS_OUTPUTIMAGE="sha,img,xz"

      - name: Set release name
        run: echo "RELEASE_NAME=$(date +'%Y%m%d_%H%M%S')" >> $GITHUB_ENV

      - name: Create GitHub Release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ env.RELEASE_NAME }}
          name: "Armbian Build ${{ env.RELEASE_NAME }}"
          artifacts: "build/output/images/*"
          allowUpdates: true
          removeArtifacts: false
          replacesArtifacts: true
          makeLatest: true
          token: ${{ secrets.GITHUB_TOKEN }}
          body: |
            Armbian custom build for ${{ github.event.inputs.board }}
            Kernel branch: ${{ github.event.inputs.branch }}
            Build timestamp: ${{ env.RELEASE_NAME }}
            Armbian build version: ${{ env.LATEST_STABLE_VERSION }}
            Filesystem: btrfs
